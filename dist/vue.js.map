{"version":3,"file":"vue.js","sources":["../src/complier/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 对模板进行编译\r\nexport function compileToFunction(template) {\r\n  console.log(\"template\", template);\r\n  // 1.将template转化ast语法树\r\n  // 2.生成render方法(render方法执行后的返回结果就是虚拟DOM)\r\n}\r\n","// 重写数组的部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\r\n  // 找到所有的变异方法【修改原数组】\r\n  \"push\",\r\n  \"pop\",\r\n  \"shift\",\r\n  \"unshift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\n// concat slice 都不会改变原数组\r\nmethods.forEach((method) => {\r\n  // arr.push(123)\r\n  newArrayProto[method] = function (...args) {\r\n    // 这里重写了数组的方法\r\n    // push.call(arrnewArrayProto) todo...\r\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法，函数的劫持， 切片编程\r\n    // 需要对新增的数据 再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\": // arr.push(1,2,3)\r\n        inserted = args;\r\n        break;\r\n      case \"splice\": // arr.splice(0,1,{a:1}) 找到第0个删除第一个，新增一个对象\r\n        inserted = args.slice(2); // 获取新增的数据\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"新增的内容inserted\", inserted);\r\n    if (inserted) {\r\n      // 对新增的内容再次观测\r\n      ob.observeArray(inserted);\r\n    }\r\n\r\n    return result;\r\n  };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false,\r\n    });\r\n    // Object.defineProperty(data, \"__ob__\", {\r\n    //   value: this,\r\n    //   enumerable: false, // 将__ob__变成不可枚举（循环的时候无法获取到）\r\n    // });\r\n    // Object.defineProperty 只能劫持已经存在的属性，新增或者删除并不知道【vue2里面会为此单独写api $set $delete】\r\n    // data.__ob__ = this; // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测过\r\n    if (Array.isArray(data)) {\r\n      // 重写数组中的方法 7个变异方法，是可以修改数组本身\r\n\r\n      data.__proto__ = newArrayProto; // 保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data); // 如果数组中存在对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data); // 遍历对象劫持\r\n    }\r\n  }\r\n  /**\r\n   * 循环对象 对属性依次劫持\r\n   * @param {*} data\r\n   */\r\n  walk(data) {\r\n    // \"重新定义\"属性 【注意：性能差】\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\n/**\r\n * 属性劫持\r\n * @param {*} target\r\n * @param {*} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(target, key, value) {\r\n  // 闭包 属性劫持 递归操作对所有的对象进行属性劫持\r\n  observe(value);\r\n\r\n  // 最后一个参数是闭包，value并不会销毁\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log(\"用户取值了\", key);\r\n      // 取值的时候，会执行get\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      console.log(\"用户设置值了\", key);\r\n      // 修改的时候，会执行set\r\n      if (newValue === value) return;\r\n      observe(newValue);\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对【对象】进行劫持\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持\r\n  // 【要判断对象是否被劫持过,可以增添一个实例，用实例判断是否被劫持】\r\n  // 说明这个对象被代理过\r\n  if (data.__ob__ instanceof Observe) {\r\n    return data.__ob__;\r\n  }\r\n\r\n  return new Observe(data);\r\n}\r\n","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    // vm.name\r\n    get() {\r\n      return vm[target][key]; // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function initData(vm) {\r\n  let data = vm.$options.data;\r\n  // vue3中data必须是函数，vue2可以是对象或者函数 注意:call\r\n  // data是用户返回的对象\r\n  data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n  vm._data = data; // 使用_data存储值\r\n  // 对数据进行劫持 vue2 采用了api defineProperty\r\n  observe(data);\r\n\r\n  // 将vm._data 用vm来代理即可\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","import { compileToFunction } from \"./complier\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  // 就是给vue添加init方法\r\n  /**\r\n   * 用户初始化方法\r\n   */\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    // 使用vue $nextTick $data $attr......\r\n    const vm = this;\r\n    vm.$options = options; // 将用户选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n    // todo...\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n      const vm = this;\r\n      el = document.querySelector(el);\r\n      let ops = vm.$options;\r\n      if (!ops.render) {\r\n        // 先进行查找是否有render函数\r\n        let template; // 没有render，是否有写template。没写template就用外部的template\r\n        if (!ops.template && el) {\r\n          // 没有写模板，但是写了el\r\n          template = el.outerHTML;\r\n        } else {\r\n          if (el) {\r\n            template = ops.template; // 如果有el则采用模板的内容\r\n          }\r\n        }\r\n        // 写了template就用写了的template\r\n        console.log(\"template\", template);\r\n        if (template) {\r\n          // 有了模板进行模板编译\r\n          const render = compileToFunction(template);\r\n          ops.render = render; // jsx 最终会被编译成h('xxx')\r\n        }\r\n      }\r\n      // ops.render; // 最终就可以获取render方法\r\n    };\r\n\r\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime【运行时】不包含模板编译的，整个编译打包的时候通过loader来转义.vue文件\r\n    // 用runtime的时候，不能使用template\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n  this._init(options); // options就是用户的选项\r\n}\r\n\r\ninitMixin(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["compileToFunction","template","console","log","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","Observe","data","_classCallCheck","defineProperty","value","enumerable","isArray","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}