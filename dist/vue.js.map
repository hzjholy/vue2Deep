{"version":3,"file":"vue.js","sources":["../src/complier/parse.js","../src/complier/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["/*\r\n * @Description: html转为语法树\r\n * @Version: 1.0\r\n * @Author: hzj\r\n * @Date: 2024-03-16 19:53:37\r\n * @LastEditors: hzj\r\n * @LastEditTime: 2024-03-16 20:10:08\r\n */\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // :标签说明可能存在命名空间\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配到的分组是一个 标签名  <xxx 匹配到的是开始标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译\r\n\r\n/**\r\n *{\r\n    tag: 'div',\r\n    type: 1,\r\n    attrs: [{name,age}],\r\n    parent:null,\r\n    children:[{\r\n        tag: 'div',\r\n        type: 1,\r\n        attrs: [{name,age}],\r\n        parent:null,\r\n        children:[{\r\n            \r\n        }]\r\n    }]\r\n}\r\n * @param {*} html\r\n * 每解析一个删除一个\r\n */\r\n\r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素\r\n  let currentParent; // 指针，永远指向栈中的最后一个\r\n  let root;\r\n\r\n  // 最终需要转化成一颗抽象的语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n  //  div span\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs); // 创造一个ast节点\r\n    if (!root) {\r\n      // 是否为空树\r\n      root = node; // 如果为空，则为树的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent; // 只赋值了father\r\n      currentParent.children.push(node); // 还需将father的children赋值给自己\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; // currentParent为栈中的最后一个\r\n  }\r\n  /**\r\n   * 文本直接放到当前指向的节点\r\n   * @param {*} text\r\n   */\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, \"\"); // 如果空格超过2就删除两个以上\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent,\r\n      });\r\n  }\r\n  function end(tag) {\r\n    let node = stack.pop(); // 弹出最后一个,校验标签是否合法\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n  // html最开始肯定是一个 <  <div>hello</div>\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [], // 属性\r\n      };\r\n      advance(start[0].length); // 删掉已经匹配过的内容\r\n      // 如果不是开始标签的结束，就一直匹配下去\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n    return false; // 不是开始标签\r\n  }\r\n  while (html) {\r\n    // 如果textEnd为0，说明是一个开始标签或者结束标签\r\n    // 如果textEnd>0，说明就是文本的结束位置\r\n    let textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n    // 开始标签解析\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        // 解析到的开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1]);\r\n        advance(endTagMatch[0].length);\r\n        continue;\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      // 截取文本的内容\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = \"\"; // {name,value}\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === \"style\") {\r\n      // color:'red';background:'red'; => {color:'red'}\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        // qs库\r\n        let [key, value] = item.trim().split(\":\");\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`; // a:b,a:v,\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    // 元素\r\n    return codegen(node);\r\n  } else {\r\n    // 文本\r\n    // console.log(\"node\", node);\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    } else {\r\n      // _v(_s(name)+ 'hzj' + _s(name))\r\n      console.log(node);\r\n      let tokens = [];\r\n      let match;\r\n      // 如果正则需要多次匹配，并且有带“g”，捕获的情况下，只会取最后的值，需要重置一下捕获位置\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      // split\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        let index = match.index; // 匹配的位置\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map((child) => gen(child)).join(\",\");\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n  }${ast.children.length ? `,${children}` : \"\"})`;\r\n\r\n  return code;\r\n}\r\n\r\n/**\r\n * @deprecated 表示该函数已被弃用 test\r\n * @description:\r\n * @param {*} template\r\n * @return {*}\r\n * @author: hzj\r\n */\r\nexport function compileToFunction(template) {\r\n  // 1.将template转化ast语法树\r\n  let ast = parseHTML(template);\r\n  // 2.生成render方法(render方法执行后的返回结果就是虚拟DOM)\r\n  // 标签名+属性+儿子\r\n\r\n  // 模板引擎的实现原理  with + new Function\r\n  let code = codegen(ast);\r\n  code = `with(this){return ${code}}`;\r\n  let redner = new Function(code); // 根据代码生成render函数\r\n  return redner;\r\n}\r\n","/*\r\n * @Description: 虚拟DOM\r\n * @Version: 1.0\r\n * @Author: hzj\r\n * @Date: 2024-03-16 21:23:44\r\n * @LastEditors: hzj\r\n * @LastEditTime: 2024-03-16 21:37:24\r\n */\r\n// h()  _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n  if (data == null) {\r\n    data = {};\r\n  }\r\n  let key = data.key;\r\n  if (key) {\r\n    delete data.key;\r\n  }\r\n  return vnode(vm, tag, key, data, children);\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// ast一样吗？ ast做的是语法层面的转化，描述的是语法本身（可以描述js css html）\r\n// 虚拟DOM描述的是 DOM元素，可以增加一些自定义的属性(描述DOM)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n    //  ...\r\n  };\r\n}\r\n","/*\r\n * @Description: 组件挂载\r\n * @Version: 1.0\r\n * @Author: hzj\r\n * @Date: 2024-03-16 21:08:25\r\n * @LastEditors: hzj\r\n * @LastEditTime: 2024-03-16 22:08:04\r\n */\r\n\r\nimport { createElementVNode, createTextVNode } from \"./vdom\";\r\n\r\nfunction createElm(vnode) {\r\n  let { tag, data, children, text } = vnode;\r\n  if (typeof tag === \"string\") {\r\n    // 标签\r\n    // 这里将真实节点和虚拟节点对应起来，后续如果修改属性了\r\n    vnode.el = document.createElement(tag);\r\n    patchProps(vnode.el, data);\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child));\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n  for (let key in props) {\r\n    if (key === \"style\") {\r\n      // style{color:'red'}\r\n      for (let styleName in props.style) {\r\n        el.style[styleName] = props.style[styleName];\r\n      }\r\n    } else {\r\n      el.setAttribute(key, props[key]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n  // 写的是初渲染流程\r\n  const isRealElement = oldVNode.nodeType;\r\n  if (isRealElement) {\r\n    const elm = oldVNode; // 获取真实元素\r\n    const parentElm = elm.parentNode; // 拿到父元素\r\n    let newElm = createElm(vnode);\r\n    parentElm.insertBefore(newElm, elm.nextSibling);\r\n    parentElm.removeChild(elm); // 删除老节点\r\n    console.log(\"newElm\", newElm);\r\n\r\n    return newElm;\r\n  } else {\r\n    // diff算法\r\n  }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n  // 将vnode转为真实DOM\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    console.log(vnode, el);\r\n    // patch 既有初始化功能，又有更新的逻辑\r\n    vm.$el = patch(el, vnode);\r\n  };\r\n  //  _c('div',{},...children)\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments);\r\n  };\r\n  //  _v(text)\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value !== \"object\") return value;\r\n    return JSON.stringify(value);\r\n  };\r\n  Vue.prototype._render = function () {\r\n    console.log(\"render\");\r\n    // 当渲染的时候，会去实例中取值，我们可以将属性和视图绑定在一起\r\n    // 让with中的this指向vm\r\n    return this.$options.render.call(this); // 通过ast语法转义后执行的render方法\r\n  };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n  // 这里的el是通过querySelector处理过的\r\n  vm.$el = el;\r\n  // 1.调用render方法产生虚拟DOM\r\n  vm._update(vm._render()); // vm.$options.render() 返回虚拟节点  _update将虚拟节点生成真实节点\r\n  // 2.根据虚拟DOM产生真实DOM\r\n  // 3.插入el的元素中\r\n}\r\n\r\n/**\r\n * vue的核心流程\r\n * 1. 创造了响应式数据  once\r\n * 2. 将模板转换为ast语法树 once\r\n * 3. 将ast语法树转换了render函数\r\n * 4. 后续每次数据更新只执行render函数（无需再次执行ast转化的过程）\r\n * 5. render函数会产生虚拟节点(使用响应式数据)\r\n * 6. 根据生成的虚拟节点创造真实的DOM\r\n */\r\n","// 重写数组的部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\r\n  // 找到所有的变异方法【修改原数组】\r\n  \"push\",\r\n  \"pop\",\r\n  \"shift\",\r\n  \"unshift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\n// concat slice 都不会改变原数组\r\nmethods.forEach((method) => {\r\n  // arr.push(123)\r\n  newArrayProto[method] = function (...args) {\r\n    // 这里重写了数组的方法\r\n    // push.call(arrnewArrayProto) todo...\r\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法，函数的劫持， 切片编程\r\n    // 需要对新增的数据 再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\": // arr.push(1,2,3)\r\n        inserted = args;\r\n        break;\r\n      case \"splice\": // arr.splice(0,1,{a:1}) 找到第0个删除第一个，新增一个对象\r\n        inserted = args.slice(2); // 获取新增的数据\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"新增的内容inserted\", inserted);\r\n    if (inserted) {\r\n      // 对新增的内容再次观测\r\n      ob.observeArray(inserted);\r\n    }\r\n\r\n    return result;\r\n  };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false,\r\n    });\r\n    // Object.defineProperty(data, \"__ob__\", {\r\n    //   value: this,\r\n    //   enumerable: false, // 将__ob__变成不可枚举（循环的时候无法获取到）\r\n    // });\r\n    // Object.defineProperty 只能劫持已经存在的属性，新增或者删除并不知道【vue2里面会为此单独写api $set $delete】\r\n    // data.__ob__ = this; // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测过\r\n    if (Array.isArray(data)) {\r\n      // 重写数组中的方法 7个变异方法，是可以修改数组本身\r\n\r\n      data.__proto__ = newArrayProto; // 保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data); // 如果数组中存在对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data); // 遍历对象劫持\r\n    }\r\n  }\r\n  /**\r\n   * 循环对象 对属性依次劫持\r\n   * @param {*} data\r\n   */\r\n  walk(data) {\r\n    // \"重新定义\"属性 【注意：性能差】\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\n/**\r\n * 属性劫持\r\n * @param {*} target\r\n * @param {*} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(target, key, value) {\r\n  // 闭包 属性劫持 递归操作对所有的对象进行属性劫持\r\n  observe(value);\r\n\r\n  // 最后一个参数是闭包，value并不会销毁\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log(\"用户取值了\", key);\r\n      // 取值的时候，会执行get\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      console.log(\"用户设置值了\", key);\r\n      // 修改的时候，会执行set\r\n      if (newValue === value) return;\r\n      observe(newValue);\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对【对象】进行劫持\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持\r\n  // 【要判断对象是否被劫持过,可以增添一个实例，用实例判断是否被劫持】\r\n  // 说明这个对象被代理过\r\n  if (data.__ob__ instanceof Observe) {\r\n    return data.__ob__;\r\n  }\r\n\r\n  return new Observe(data);\r\n}\r\n","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    // vm.name\r\n    get() {\r\n      return vm[target][key]; // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function initData(vm) {\r\n  let data = vm.$options.data;\r\n  // vue3中data必须是函数，vue2可以是对象或者函数 注意:call\r\n  // data是用户返回的对象\r\n  data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n  vm._data = data; // 使用_data存储值\r\n  // 对数据进行劫持 vue2 采用了api defineProperty\r\n  observe(data);\r\n\r\n  // 将vm._data 用vm来代理即可\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","import { compileToFunction } from \"./complier\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  // 就是给vue添加init方法\r\n  /**\r\n   * 用户初始化方法\r\n   */\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    // 使用vue $nextTick $data $attr......\r\n    const vm = this;\r\n    vm.$options = options; // 将用户选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n    // todo...\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n      const vm = this;\r\n      el = document.querySelector(el);\r\n      let ops = vm.$options;\r\n      if (!ops.render) {\r\n        // 先进行查找是否有render函数\r\n        let template; // 没有render，是否有写template。没写template就用外部的template\r\n        if (!ops.template && el) {\r\n          // 没有写模板，但是写了el\r\n          template = el.outerHTML;\r\n        } else {\r\n          if (el) {\r\n            template = ops.template; // 如果有el则采用模板的内容\r\n          }\r\n        }\r\n        // 写了template就用写了的template\r\n        if (template) {\r\n          // 有了模板进行模板编译\r\n          const render = compileToFunction(template);\r\n          ops.render = render; // jsx 最终会被编译成h('xxx')\r\n        }\r\n      }\r\n      // ops.render; // 最终就可以获取render方法\r\n      mountComponent(vm,el); // 组件的挂载\r\n    };\r\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime【运行时】不包含模板编译的，整个编译打包的时候通过loader来转义.vue文件\r\n    // 用runtime的时候，不能使用template\r\n  };\r\n}\r\n","/*\r\n * @Description: 主文件\r\n * @Version: 1.0\r\n * @Author: hzj\r\n * @Date: 2024-03-09 22:00:57\r\n * @LastEditors: hzj\r\n * @LastEditTime: 2024-03-16 21:13:23\r\n */\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n  this._init(options); // options就是用户的选项\r\n}\r\n\r\ninitMixin(Vue);\r\ninitLifeCycle(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$trim$split","trim","_item$trim$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","console","log","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","redner","Function","createElementVNode","vm","data","_len","arguments","Array","_key","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","prototype","_update","$el","_c","apply","call","_v","_s","_typeof","_render","$options","render","mountComponent","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","result","inserted","ob","__ob__","observeArray","Observe","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","observe","target","get","set","newValue","initState","opts","initData","proxy","_data","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}