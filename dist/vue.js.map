{"version":3,"file":"vue.js","sources":["../src/complier/parse.js","../src/complier/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["/*\r\n * @Description: html转为语法树\r\n * @Version: 1.0\r\n * @Author: hzj\r\n * @Date: 2024-03-16 19:53:37\r\n * @LastEditors: hzj\r\n * @LastEditTime: 2024-03-16 20:10:08\r\n */\r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // :标签说明可能存在命名空间\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配到的分组是一个 标签名  <xxx 匹配到的是开始标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br/>\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译\r\n\r\n/**\r\n *{\r\n    tag: 'div',\r\n    type: 1,\r\n    attrs: [{name,age}],\r\n    parent:null,\r\n    children:[{\r\n        tag: 'div',\r\n        type: 1,\r\n        attrs: [{name,age}],\r\n        parent:null,\r\n        children:[{\r\n            \r\n        }]\r\n    }]\r\n}\r\n * @param {*} html\r\n * 每解析一个删除一个\r\n */\r\n\r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; // 用于存放元素\r\n  let currentParent; // 指针，永远指向栈中的最后一个\r\n  let root;\r\n\r\n  // 最终需要转化成一颗抽象的语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n  //  div span\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs); // 创造一个ast节点\r\n    if (!root) {\r\n      // 是否为空树\r\n      root = node; // 如果为空，则为树的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent; // 只赋值了father\r\n      currentParent.children.push(node); // 还需将father的children赋值给自己\r\n    }\r\n    stack.push(node);\r\n    currentParent = node; // currentParent为栈中的最后一个\r\n  }\r\n  /**\r\n   * 文本直接放到当前指向的节点\r\n   * @param {*} text\r\n   */\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, \"\"); // 如果空格超过2就删除两个以上\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent,\r\n      });\r\n  }\r\n  function end(tag) {\r\n    let node = stack.pop(); // 弹出最后一个,校验标签是否合法\r\n    currentParent = stack[stack.length - 1];\r\n  }\r\n  // html最开始肯定是一个 <  <div>hello</div>\r\n  function advance(n) {\r\n    html = html.substring(n);\r\n  }\r\n\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], // 标签名\r\n        attrs: [], // 属性\r\n      };\r\n      advance(start[0].length); // 删掉已经匹配过的内容\r\n      // 如果不是开始标签的结束，就一直匹配下去\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      if (end) {\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n    return false; // 不是开始标签\r\n  }\r\n  while (html) {\r\n    // 如果textEnd为0，说明是一个开始标签或者结束标签\r\n    // 如果textEnd>0，说明就是文本的结束位置\r\n    let textEnd = html.indexOf(\"<\"); // 如果indexOf中的索引是0 则说明是个标签\r\n    // 开始标签解析\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag(); // 开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        // 解析到的开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1]);\r\n        advance(endTagMatch[0].length);\r\n        continue;\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      // 截取文本的内容\r\n      let text = html.substring(0, textEnd); // 文本内容\r\n      if (text) {\r\n        chars(text);\r\n        advance(text.length); // 解析到的文本\r\n      }\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n  let str = \"\"; // {name,value}\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === \"style\") {\r\n      // color:'red';background:'red'; => {color:'red'}\r\n      let obj = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        // qs库\r\n        let [key, value] = item.split(\":\");\r\n        obj[key] = value;\r\n      });\r\n      attr.value = obj;\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`; // a:b,a:v,\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n\r\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    // 元素\r\n    return codegen(node);\r\n  } else {\r\n    // 文本\r\n    // console.log(\"node\", node);\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`;\r\n    } else {\r\n      // _v(_s(name)+ 'hzj' + _s(name))\r\n      console.log(node);\r\n      let tokens = [];\r\n      let match;\r\n      // 如果正则需要多次匹配，并且有带“g”，捕获的情况下，只会取最后的值，需要重置一下捕获位置\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      // split\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        let index = match.index; // 匹配的位置\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map((child) => gen(child)).join(\",\");\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? genProps(ast.attrs) : \"null\"\r\n  }${ast.children.length ? `,${children}` : \"\"})`;\r\n\r\n  return code;\r\n}\r\n\r\n/**\r\n * @deprecated 表示该函数已被弃用 test\r\n * @description:\r\n * @param {*} template\r\n * @return {*}\r\n * @author: hzj\r\n */\r\nexport function compileToFunction(template) {\r\n  // 1.将template转化ast语法树\r\n  let ast = parseHTML(template);\r\n  // 2.生成render方法(render方法执行后的返回结果就是虚拟DOM)\r\n  // 标签名+属性+儿子\r\n  const codeString = codegen(ast);\r\n\r\n  console.log(codeString);\r\n}\r\n","// 重写数组的部分方法\r\n\r\nlet oldArrayProto = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto);\r\n\r\nlet methods = [\r\n  // 找到所有的变异方法【修改原数组】\r\n  \"push\",\r\n  \"pop\",\r\n  \"shift\",\r\n  \"unshift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\n// concat slice 都不会改变原数组\r\nmethods.forEach((method) => {\r\n  // arr.push(123)\r\n  newArrayProto[method] = function (...args) {\r\n    // 这里重写了数组的方法\r\n    // push.call(arrnewArrayProto) todo...\r\n    const result = oldArrayProto[method].call(this, ...args); // 内部调用原来的方法，函数的劫持， 切片编程\r\n    // 需要对新增的数据 再次进行劫持\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\": // arr.push(1,2,3)\r\n        inserted = args;\r\n        break;\r\n      case \"splice\": // arr.splice(0,1,{a:1}) 找到第0个删除第一个，新增一个对象\r\n        inserted = args.slice(2); // 获取新增的数据\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"新增的内容inserted\", inserted);\r\n    if (inserted) {\r\n      // 对新增的内容再次观测\r\n      ob.observeArray(inserted);\r\n    }\r\n\r\n    return result;\r\n  };\r\n});\r\n","import { newArrayProto } from \"./array\";\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false,\r\n    });\r\n    // Object.defineProperty(data, \"__ob__\", {\r\n    //   value: this,\r\n    //   enumerable: false, // 将__ob__变成不可枚举（循环的时候无法获取到）\r\n    // });\r\n    // Object.defineProperty 只能劫持已经存在的属性，新增或者删除并不知道【vue2里面会为此单独写api $set $delete】\r\n    // data.__ob__ = this; // 给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测过\r\n    if (Array.isArray(data)) {\r\n      // 重写数组中的方法 7个变异方法，是可以修改数组本身\r\n\r\n      data.__proto__ = newArrayProto; // 保留数组原有的特性，并且可以重写部分方法\r\n      this.observeArray(data); // 如果数组中存在对象，可以监控到对象的变化\r\n    } else {\r\n      this.walk(data); // 遍历对象劫持\r\n    }\r\n  }\r\n  /**\r\n   * 循环对象 对属性依次劫持\r\n   * @param {*} data\r\n   */\r\n  walk(data) {\r\n    // \"重新定义\"属性 【注意：性能差】\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  observeArray(data) {\r\n    // 观测数组\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n\r\n/**\r\n * 属性劫持\r\n * @param {*} target\r\n * @param {*} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(target, key, value) {\r\n  // 闭包 属性劫持 递归操作对所有的对象进行属性劫持\r\n  observe(value);\r\n\r\n  // 最后一个参数是闭包，value并不会销毁\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      console.log(\"用户取值了\", key);\r\n      // 取值的时候，会执行get\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      console.log(\"用户设置值了\", key);\r\n      // 修改的时候，会执行set\r\n      if (newValue === value) return;\r\n      observe(newValue);\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 对这个对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; // 只对【对象】进行劫持\r\n  }\r\n  // 如果一个对象被劫持过了，那就不需要再被劫持\r\n  // 【要判断对象是否被劫持过,可以增添一个实例，用实例判断是否被劫持】\r\n  // 说明这个对象被代理过\r\n  if (data.__ob__ instanceof Observe) {\r\n    return data.__ob__;\r\n  }\r\n\r\n  return new Observe(data);\r\n}\r\n","import { observe } from \"./observe\";\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    // vm.name\r\n    get() {\r\n      return vm[target][key]; // vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function initData(vm) {\r\n  let data = vm.$options.data;\r\n  // vue3中data必须是函数，vue2可以是对象或者函数 注意:call\r\n  // data是用户返回的对象\r\n  data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n  vm._data = data; // 使用_data存储值\r\n  // 对数据进行劫持 vue2 采用了api defineProperty\r\n  observe(data);\r\n\r\n  // 将vm._data 用vm来代理即可\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n","import { compileToFunction } from \"./complier\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  // 就是给vue添加init方法\r\n  /**\r\n   * 用户初始化方法\r\n   */\r\n  Vue.prototype._init = function (options) {\r\n    // vue vm.$options 就是获取用户的配置\r\n    // 使用vue $nextTick $data $attr......\r\n    const vm = this;\r\n    vm.$options = options; // 将用户选项挂载到实例上\r\n\r\n    // 初始化状态\r\n    initState(vm);\r\n    // todo...\r\n    if (options.el) {\r\n      vm.$mount(options.el); // 实现数据的挂载\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n      const vm = this;\r\n      el = document.querySelector(el);\r\n      let ops = vm.$options;\r\n      if (!ops.render) {\r\n        // 先进行查找是否有render函数\r\n        let template; // 没有render，是否有写template。没写template就用外部的template\r\n        if (!ops.template && el) {\r\n          // 没有写模板，但是写了el\r\n          template = el.outerHTML;\r\n        } else {\r\n          if (el) {\r\n            template = ops.template; // 如果有el则采用模板的内容\r\n          }\r\n        }\r\n        // 写了template就用写了的template\r\n        if (template) {\r\n          // 有了模板进行模板编译\r\n          const render = compileToFunction(template);\r\n          ops.render = render; // jsx 最终会被编译成h('xxx')\r\n        }\r\n      }\r\n      // ops.render; // 最终就可以获取render方法\r\n    };\r\n\r\n    // script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n    // runtime【运行时】不包含模板编译的，整个编译打包的时候通过loader来转义.vue文件\r\n    // 用runtime的时候，不能使用template\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) {\r\n  this._init(options); // options就是用户的选项\r\n}\r\n\r\ninitMixin(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","console","log","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","codeString","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","_oldArrayProto$method","_len","arguments","args","_key","result","call","apply","inserted","ob","__ob__","observeArray","Observe","data","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","keys","defineReactive","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAMA,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,GAAAC,MAAAA,CAAAA,MAAA,CAAUF,MAAM,EAAAE,OAAAA,CAAAA,CAAAA,MAAA,CAAQF,MAAM,EAAG,GAAA,CAAA,CAAC;EACpD,IAAMG,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAAF,MAAA,CAAMD,YAAY,CAAE,CAAC,CAAC;EACrD,IAAMI,MAAM,GAAG,IAAID,MAAM,CAAA,OAAA,CAAAF,MAAA,CAASD,YAAY,EAAA,QAAA,CAAQ,CAAC,CAAC;EACxD,IAAMK,SAAS,GACb,2EAA2E,CAAC;EAC9E;EACA,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAEnC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEO,SAASC,SAASA,CAACC,IAAI,EAAE;IAC9B,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;EACnB,EAAA,IAAMC,KAAK,GAAG,EAAE,CAAC;IACjB,IAAIC,aAAa,CAAC;EAClB,EAAA,IAAIC,IAAI,CAAA;;EAER;EACA,EAAA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,KAAK,EAAE;MACpC,OAAO;EACLD,MAAAA,GAAG,EAAHA,GAAG;EACHE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACLG,MAAAA,MAAM,EAAE,IAAA;OACT,CAAA;EACH,GAAA;EACA;EACA,EAAA,SAASC,KAAKA,CAACL,GAAG,EAAEC,KAAK,EAAE;MACzB,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAC;MACxC,IAAI,CAACH,IAAI,EAAE;EACT;QACAA,IAAI,GAAGQ,IAAI,CAAC;EACd,KAAA;EACA,IAAA,IAAIT,aAAa,EAAE;EACjBS,MAAAA,IAAI,CAACF,MAAM,GAAGP,aAAa,CAAC;QAC5BA,aAAa,CAACM,QAAQ,CAACI,IAAI,CAACD,IAAI,CAAC,CAAC;EACpC,KAAA;EACAV,IAAAA,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC,CAAA;MAChBT,aAAa,GAAGS,IAAI,CAAC;EACvB,GAAA;EACA;EACF;EACA;EACA;IACE,SAASE,KAAKA,CAACC,IAAI,EAAE;MACnBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAC/BD,IAAAA,IAAI,IACFZ,aAAa,CAACM,QAAQ,CAACI,IAAI,CAAC;EAC1BL,MAAAA,IAAI,EAAEP,SAAS;EACfc,MAAAA,IAAI,EAAJA,IAAI;EACJL,MAAAA,MAAM,EAAEP,aAAAA;EACV,KAAC,CAAC,CAAA;EACN,GAAA;IACA,SAASc,GAAGA,CAACX,GAAG,EAAE;MACLJ,KAAK,CAACgB,GAAG,GAAG;MACvBf,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC,CAAA;EACzC,GAAA;EACA;IACA,SAASC,OAAOA,CAACC,CAAC,EAAE;EAClBtB,IAAAA,IAAI,GAAGA,IAAI,CAACuB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC1B,GAAA;IAEA,SAASE,aAAaA,GAAG;EACvB,IAAA,IAAMZ,KAAK,GAAGZ,IAAI,CAACyB,KAAK,CAAC/B,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIkB,KAAK,EAAE;EACT,MAAA,IAAMa,KAAK,GAAG;EACZC,QAAAA,OAAO,EAAEd,KAAK,CAAC,CAAC,CAAC;EAAE;UACnBJ,KAAK,EAAE,EAAE;SACV,CAAA;QACDa,OAAO,CAACT,KAAK,CAAC,CAAC,CAAC,CAACQ,MAAM,CAAC,CAAC;EACzB;QACA,IAAIO,IAAI,EAAET,IAAG,CAAA;QACb,OACE,EAAEA,IAAG,GAAGlB,IAAI,CAACyB,KAAK,CAAC3B,aAAa,CAAC,CAAC,KACjC6B,IAAI,GAAG3B,IAAI,CAACyB,KAAK,CAAC5B,SAAS,CAAC,CAAC,EAC9B;EACAwB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAA;EACvBK,QAAAA,KAAK,CAACjB,KAAK,CAACM,IAAI,CAAC;EACfc,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EACbE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,IAAA;EAC1C,SAAC,CAAC,CAAA;EACJ,OAAA;EACA,MAAA,IAAIT,IAAG,EAAE;EACPG,QAAAA,OAAO,CAACH,IAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAA;EACxB,OAAA;EACA,MAAA,OAAOK,KAAK,CAAA;EACd,KAAA;MACA,OAAO,KAAK,CAAC;EACf,GAAA;EACA,EAAA,OAAOzB,IAAI,EAAE;EACX;EACA;MACA,IAAI8B,OAAO,GAAG9B,IAAI,CAAC+B,OAAO,CAAC,GAAG,CAAC,CAAC;EAChC;MACA,IAAID,OAAO,IAAI,CAAC,EAAE;EAChB,MAAA,IAAME,aAAa,GAAGR,aAAa,EAAE,CAAC;EACtC,MAAA,IAAIQ,aAAa,EAAE;EACjB;UACApB,KAAK,CAACoB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAACxB,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACF,OAAA;EACA,MAAA,IAAIyB,WAAW,GAAGjC,IAAI,CAACyB,KAAK,CAAC7B,MAAM,CAAC,CAAA;EACpC,MAAA,IAAIqC,WAAW,EAAE;EACff,QAAAA,GAAG,CAACe,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnBZ,QAAAA,OAAO,CAACY,WAAW,CAAC,CAAC,CAAC,CAACb,MAAM,CAAC,CAAA;EAC9B,QAAA,SAAA;EACF,OAAA;EACF,KAAA;MACA,IAAIU,OAAO,GAAG,CAAC,EAAE;EACf;QACA,IAAId,IAAI,GAAGhB,IAAI,CAACuB,SAAS,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAC;EACtC,MAAA,IAAId,IAAI,EAAE;UACRD,KAAK,CAACC,IAAI,CAAC,CAAA;EACXK,QAAAA,OAAO,CAACL,IAAI,CAACI,MAAM,CAAC,CAAC;EACvB,OAAA;EACF,KAAA;EACF,GAAA;EAEA,EAAA,OAAOf,IAAI,CAAA;EACb;;ECrJA,SAAS6B,QAAQA,CAAC1B,KAAK,EAAE;EACvB,EAAA,IAAI2B,GAAG,GAAG,EAAE,CAAC;IAAC,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACyB;EACrC,IAAA,IAAIT,IAAI,GAAGnB,KAAK,CAAC6B,CAAC,CAAC,CAAA;EACnB,IAAA,IAAIV,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;EACzB;QACA,IAAIU,GAAG,GAAG,EAAE,CAAA;EACZX,MAAAA,IAAI,CAACE,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAACC,IAAI,EAAK;EACtC;EACA,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;YAAAI,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7BG,UAAAA,GAAG,GAAAF,YAAA,CAAA,CAAA,CAAA;EAAEd,UAAAA,KAAK,GAAAc,YAAA,CAAA,CAAA,CAAA,CAAA;EACfL,QAAAA,GAAG,CAACO,GAAG,CAAC,GAAGhB,KAAK,CAAA;EAClB,OAAC,CAAC,CAAA;QACFF,IAAI,CAACE,KAAK,GAAGS,GAAG,CAAA;EAClB,KAAA;EACAH,IAAAA,GAAG,OAAA1C,MAAA,CAAOkC,IAAI,CAACC,IAAI,OAAAnC,MAAA,CAAIqD,IAAI,CAACC,SAAS,CAACpB,IAAI,CAACE,KAAK,CAAC,EAAA,GAAA,CAAG,CAAC;KACtD,CAAA;EAbD,EAAA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7B,KAAK,CAACY,MAAM,EAAEiB,CAAC,EAAE,EAAA;MAAAD,KAAA,EAAA,CAAA;EAAA,GAAA;IAcrC,OAAA3C,GAAAA,CAAAA,MAAA,CAAW0C,GAAG,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC7B,CAAA;EAEA,IAAIC,YAAY,GAAG,0BAA0B,CAAC;EAC9C,SAASC,GAAGA,CAACrC,IAAI,EAAE;EACjB,EAAA,IAAIA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAE;EACnB;MACA,OAAO0C,OAAO,CAACtC,IAAI,CAAC,CAAA;EACtB,GAAC,MAAM;EACL;EACA;EACA,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAA;EACpB,IAAA,IAAI,CAACiC,YAAY,CAACG,IAAI,CAACpC,IAAI,CAAC,EAAE;EAC5B,MAAA,OAAA,KAAA,CAAAvB,MAAA,CAAaqD,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACnC,KAAC,MAAM;EACL;EACAqC,MAAAA,OAAO,CAACC,GAAG,CAACzC,IAAI,CAAC,CAAA;QACjB,IAAI0C,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAI9B,KAAK,CAAA;EACT;QACAwB,YAAY,CAACO,SAAS,GAAG,CAAC,CAAA;QAC1B,IAAIA,SAAS,GAAG,CAAC,CAAA;EACjB;QACA,OAAQ/B,KAAK,GAAGwB,YAAY,CAACQ,IAAI,CAACzC,IAAI,CAAC,EAAG;EACxC,QAAA,IAAI0C,KAAK,GAAGjC,KAAK,CAACiC,KAAK,CAAC;UACxB,IAAIA,KAAK,GAAGF,SAAS,EAAE;EACrBD,UAAAA,MAAM,CAACzC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACQ,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC3D,SAAA;EACAH,QAAAA,MAAM,CAACzC,IAAI,CAAArB,KAAAA,CAAAA,MAAA,CAAOgC,KAAK,CAAC,CAAC,CAAC,CAACkC,IAAI,EAAE,MAAG,CAAC,CAAA;UACrCH,SAAS,GAAGE,KAAK,GAAGjC,KAAK,CAAC,CAAC,CAAC,CAACL,MAAM,CAAA;EACrC,OAAA;EACA,MAAA,IAAIoC,SAAS,GAAGxC,IAAI,CAACI,MAAM,EAAE;EAC3BmC,QAAAA,MAAM,CAACzC,IAAI,CAACgC,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAACgC,KAAK,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAA;EACpD,OAAA;EACA,MAAA,OAAA,KAAA,CAAA/D,MAAA,CAAa8D,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,KAAA;EACF,GAAA;EACF,CAAA;EAEA,SAASC,WAAWA,CAACnD,QAAQ,EAAE;EAC7B,EAAA,OAAOA,QAAQ,CAACoD,GAAG,CAAC,UAACC,KAAK,EAAA;MAAA,OAAKb,GAAG,CAACa,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACH,IAAI,CAAC,GAAG,CAAC,CAAA;EACtD,CAAA;EAEA,SAAST,OAAOA,CAACa,GAAG,EAAE;EACpB,EAAA,IAAItD,QAAQ,GAAGmD,WAAW,CAACG,GAAG,CAACtD,QAAQ,CAAC,CAAA;EACxC,EAAA,IAAIuD,IAAI,GAAAxE,MAAAA,CAAAA,MAAA,CAAUuE,GAAG,CAACzD,GAAG,EAAAd,IAAAA,CAAAA,CAAAA,MAAA,CACvBuE,GAAG,CAACxD,KAAK,CAACY,MAAM,GAAG,CAAC,GAAGc,QAAQ,CAAC8B,GAAG,CAACxD,KAAK,CAAC,GAAG,MAAM,CAAAf,CAAAA,MAAA,CAClDuE,GAAG,CAACtD,QAAQ,CAACU,MAAM,GAAA3B,GAAAA,CAAAA,MAAA,CAAOiB,QAAQ,CAAA,GAAK,EAAE,EAAG,GAAA,CAAA,CAAA;EAE/C,EAAA,OAAOuD,IAAI,CAAA;EACb,CAAA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAC1C;EACA,EAAA,IAAIH,GAAG,GAAGjE,SAAS,CAACoE,QAAQ,CAAC,CAAA;EAC7B;EACA;EACA,EAAA,IAAMC,UAAU,GAAGjB,OAAO,CAACa,GAAG,CAAC,CAAA;EAE/BX,EAAAA,OAAO,CAACC,GAAG,CAACc,UAAU,CAAC,CAAA;EACzB;;ECrFA;;EAEA,IAAIC,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAC;;EAEpC;EACO,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAA;EAEvD,IAAIM,OAAO,GAAG;EACZ;EACA,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,MAAM,EACN,QAAQ,CACT,CAAA;EACD;EACAA,OAAO,CAACnC,OAAO,CAAC,UAACoC,MAAM,EAAK;EAC1B;EACAJ,EAAAA,aAAa,CAACI,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,qBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAA3D,MAAA,EAAN4D,IAAI,GAAAV,IAAAA,KAAA,CAAAQ,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;EACvC;EACA;MACA,IAAMC,MAAM,GAAG,CAAAL,qBAAA,GAAAR,aAAa,CAACO,MAAM,CAAC,EAACO,IAAI,CAAAC,KAAA,CAAAP,qBAAA,EAAA,CAAC,IAAI,CAAA,CAAApF,MAAA,CAAKuF,IAAI,CAAC,CAAA,CAAC;EACzD;EACA,IAAA,IAAIK,QAAQ,CAAA;EACZ,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,QAAQX,MAAM;EACZ,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EAAE;EACdS,QAAAA,QAAQ,GAAGL,IAAI,CAAA;EACf,QAAA,MAAA;EACF,MAAA,KAAK,QAAQ;EAAE;EACbK,QAAAA,QAAQ,GAAGL,IAAI,CAAChC,KAAK,CAAC,CAAC,CAAC,CAAA;EAG5B,KAAA;EACAK,IAAAA,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE+B,QAAQ,CAAC,CAAA;EACtC,IAAA,IAAIA,QAAQ,EAAE;EACZ;EACAC,MAAAA,EAAE,CAACE,YAAY,CAACH,QAAQ,CAAC,CAAA;EAC3B,KAAA;EAEA,IAAA,OAAOH,MAAM,CAAA;KACd,CAAA;EACH,CAAC,CAAC;;EC7CsC,IAElCO,OAAO,gBAAA,YAAA;IACX,SAAAA,OAAAA,CAAYC,IAAI,EAAE;EAAAC,IAAAA,eAAA,OAAAF,OAAA,CAAA,CAAA;EAChBhB,IAAAA,MAAM,CAACmB,cAAc,CAACF,IAAI,EAAE,QAAQ,EAAE;EACpC7D,MAAAA,KAAK,EAAE,IAAI;EACXgE,MAAAA,UAAU,EAAE,KAAA;EACd,KAAC,CAAC,CAAA;EACF;EACA;EACA;EACA;EACA;EACA;EACA,IAAA,IAAIvB,KAAK,CAACwB,OAAO,CAACJ,IAAI,CAAC,EAAE;EACvB;;EAEAA,MAAAA,IAAI,CAACK,SAAS,GAAGvB,aAAa,CAAC;EAC/B,MAAA,IAAI,CAACgB,YAAY,CAACE,IAAI,CAAC,CAAC;EAC1B,KAAC,MAAM;EACL,MAAA,IAAI,CAACM,IAAI,CAACN,IAAI,CAAC,CAAC;EAClB,KAAA;EACF,GAAA;EACA;EACF;EACA;EACA;EAHEO,EAAAA,YAAA,CAAAR,OAAA,EAAA,CAAA;MAAA5C,GAAA,EAAA,MAAA;EAAAhB,IAAAA,KAAA,EAIA,SAAAmE,IAAKN,CAAAA,IAAI,EAAE;EACT;QACAjB,MAAM,CAACyB,IAAI,CAACR,IAAI,CAAC,CAAClD,OAAO,CAAC,UAACK,GAAG,EAAA;UAAA,OAAKsD,cAAc,CAACT,IAAI,EAAE7C,GAAG,EAAE6C,IAAI,CAAC7C,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EAC1E,KAAA;EAAC,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAhB,IAAAA,KAAA,EACD,SAAA2D,YAAaE,CAAAA,IAAI,EAAE;EACjB;EACAA,MAAAA,IAAI,CAAClD,OAAO,CAAC,UAACC,IAAI,EAAA;UAAA,OAAK2D,OAAO,CAAC3D,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAgD,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGH;EACA;EACA;EACA;EACA;EACA;EACO,SAASU,cAAcA,CAACE,MAAM,EAAExD,GAAG,EAAEhB,KAAK,EAAE;EACjD;IACAuE,OAAO,CAACvE,KAAK,CAAC,CAAA;;EAEd;EACA4C,EAAAA,MAAM,CAACmB,cAAc,CAACS,MAAM,EAAExD,GAAG,EAAE;MACjCyD,GAAG,EAAA,SAAAA,MAAG;EACJjD,MAAAA,OAAO,CAACC,GAAG,CAAC,OAAO,EAAET,GAAG,CAAC,CAAA;EACzB;EACA,MAAA,OAAOhB,KAAK,CAAA;OACb;MACD0E,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACZnD,MAAAA,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAET,GAAG,CAAC,CAAA;EAC1B;QACA,IAAI2D,QAAQ,KAAK3E,KAAK,EAAE,OAAA;QACxBuE,OAAO,CAACI,QAAQ,CAAC,CAAA;EACjB3E,MAAAA,KAAK,GAAG2E,QAAQ,CAAA;EAClB,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;EAEO,SAASJ,OAAOA,CAACV,IAAI,EAAE;EAC5B;IACA,IAAIe,OAAA,CAAOf,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,IAAI,IAAI,EAAE;EAC5C,IAAA,OAAO;EACT,GAAA;EACA;EACA;EACA;EACA,EAAA,IAAIA,IAAI,CAACH,MAAM,YAAYE,OAAO,EAAE;MAClC,OAAOC,IAAI,CAACH,MAAM,CAAA;EACpB,GAAA;EAEA,EAAA,OAAO,IAAIE,OAAO,CAACC,IAAI,CAAC,CAAA;EAC1B;;EC3EO,SAASgB,SAASA,CAACC,EAAE,EAAE;EAC5B,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAQ,CAAA;IACxB,IAAID,IAAI,CAAClB,IAAI,EAAE;MACboB,QAAQ,CAACH,EAAE,CAAC,CAAA;EACd,GAAA;EACF,CAAA;EAEA,SAASI,KAAKA,CAACJ,EAAE,EAAEN,MAAM,EAAExD,GAAG,EAAE;EAC9B4B,EAAAA,MAAM,CAACmB,cAAc,CAACe,EAAE,EAAE9D,GAAG,EAAE;EAC7B;MACAyD,GAAG,EAAA,SAAAA,MAAG;QACJ,OAAOK,EAAE,CAACN,MAAM,CAAC,CAACxD,GAAG,CAAC,CAAC;OACxB;MACD0D,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACZG,MAAAA,EAAE,CAACN,MAAM,CAAC,CAACxD,GAAG,CAAC,GAAG2D,QAAQ,CAAA;EAC5B,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;EAEO,SAASM,QAAQA,CAACH,EAAE,EAAE;EAC3B,EAAA,IAAIjB,IAAI,GAAGiB,EAAE,CAACE,QAAQ,CAACnB,IAAI,CAAA;EAC3B;EACA;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACP,IAAI,CAACwB,EAAE,CAAC,GAAGjB,IAAI,CAAA;EAExDiB,EAAAA,EAAE,CAACK,KAAK,GAAGtB,IAAI,CAAC;EAChB;IACAU,OAAO,CAACV,IAAI,CAAC,CAAA;;EAEb;EACA,EAAA,KAAK,IAAM7C,GAAG,IAAI6C,IAAI,EAAE;EACtBqB,IAAAA,KAAK,CAACJ,EAAE,EAAE,OAAO,EAAE9D,GAAG,CAAC,CAAA;EACzB,GAAA;EACF;;EChCO,SAASoE,SAASA,CAACC,GAAG,EAAE;EAC7B;EACA;EACF;EACA;EACEA,EAAAA,GAAG,CAAC3C,SAAS,CAAC4C,KAAK,GAAG,UAAUC,OAAO,EAAE;EACvC;EACA;MACA,IAAMT,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAACE,QAAQ,GAAGO,OAAO,CAAC;;EAEtB;MACAV,SAAS,CAACC,EAAE,CAAC,CAAA;EACb;MACA,IAAIS,OAAO,CAACC,EAAE,EAAE;QACdV,EAAE,CAACW,MAAM,CAACF,OAAO,CAACC,EAAE,CAAC,CAAC;EACxB,KAAA;EACAH,IAAAA,GAAG,CAAC3C,SAAS,CAAC+C,MAAM,GAAG,UAAUD,EAAE,EAAE;QACnC,IAAMV,EAAE,GAAG,IAAI,CAAA;EACfU,MAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAa,CAACH,EAAE,CAAC,CAAA;EAC/B,MAAA,IAAII,GAAG,GAAGd,EAAE,CAACE,QAAQ,CAAA;EACrB,MAAA,IAAI,CAACY,GAAG,CAACC,MAAM,EAAE;EACf;UACA,IAAIvD,QAAQ,CAAC;EACb,QAAA,IAAI,CAACsD,GAAG,CAACtD,QAAQ,IAAIkD,EAAE,EAAE;EACvB;YACAlD,QAAQ,GAAGkD,EAAE,CAACM,SAAS,CAAA;EACzB,SAAC,MAAM;EACL,UAAA,IAAIN,EAAE,EAAE;EACNlD,YAAAA,QAAQ,GAAGsD,GAAG,CAACtD,QAAQ,CAAC;EAC1B,WAAA;EACF,SAAA;EACA;EACA,QAAA,IAAIA,QAAQ,EAAE;EACZ;EACA,UAAA,IAAMuD,MAAM,GAAGxD,iBAAiB,CAACC,QAAQ,CAAC,CAAA;EAC1CsD,UAAAA,GAAG,CAACC,MAAM,GAAGA,MAAM,CAAC;EACtB,SAAA;EACF,OAAA;EACA;OACD,CAAA;;EAED;EACA;EACA;KACD,CAAA;EACH;;EC/CA;EACA,SAASR,GAAGA,CAACE,OAAO,EAAE;EACpB,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAC;EACtB,CAAA;EAEAH,SAAS,CAACC,GAAG,CAAC;;;;;;;;"}